# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: [TEST] AWS ECR+EC2 CI/CD

on:
  push:
    branches: [ "feature/**" ]
  pull_request:
    branches: [ "feature/**" ]

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true 
        tags: ${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        registry: ${{ steps.login-ecr.outputs.registry }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
      
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      env:
        AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME }}
        AWS_EC2_SSH_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
      with:
        host: ${{ env.AWS_EC2_HOST }}
        username: ${{ env.AWS_EC2_USERNAME }}
        key: ${{ env.AWS_EC2_SSH_KEY }}
        script: |
          docker pull ${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker stop my-running-app
          docker rm my-running-app
          docker run -d --name my-running-app -p 80:8080 ${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
